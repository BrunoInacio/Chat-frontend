{"version":3,"sources":["components/App/App.useTheme.js","components/Navigation/Sidebar.style.js","components/Navigation/Sidebar.itens.js","components/Navigation/Sidebar.js","components/Navigation/Header.style.js","components/Navigation/Header.js","components/Navigation/Navigation.js","components/Pages/Pages.style.js","components/Pages/withPages.js","components/Pages/Home.js","components/Pages/Info.js","components/Pages/Team.detailed.js","components/Pages/Team.list.js","components/Pages/Team.js","components/Pages/Chatbot.style.js","redux/actions/messages.js","components/Chat/useChat.js","components/Chat/useSocket.js","components/Chat/ConnectedAlert.js","components/Pages/Chatbot.MessageInput.js","utils/formatTime.js","components/Chat/useMessageList.js","utils/sameDay.js","components/Pages/Chatbot.MessageList.js","components/Pages/Chatbot.js","components/Pages/Questions.list.js","components/Pages/Questions.js","components/Pages/Technology.list.js","components/Pages/Technology.js","components/Pages/Error/Error404.js","components/App/App.routes.js","components/App/App.js","utils/useTitle.js","serviceWorker.js","redux/reducers/messages.js","redux/reducers/index.js","redux/index.js","index.js"],"names":["lightTheme","palette","type","primary","indigo","secondary","main","amber","background","default","paper","header","status","danger","darkTheme","blue","dark","light","blueGrey","makeStyles","theme","toolbar","width","props","drawerSize","display","alignItems","justifyContent","padding","spacing","mixins","menuButton","marginLeft","footer","marginTop","textAlign","selected","color","drawer","flexDirection","height","whiteSpace","drawerOpen","overflowX","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","closedWidth","leavingScreen","index","title","to","iconSelected","Home","icon","QuestionAnswer","divider","Help","SettingsEthernet","Code","Info","Sidebar","classes","useStyles","pathname","useLocation","drawerContent","Box","className","Typography","variant","component","Tooltip","aria-label","enterDelay","IconButton","onClick","closeMenu","ChevronLeft","Divider","List","menuItens","map","item","ListItem","button","key","Link","mobile","ListItemIcon","ListItemText","role","open","align","SwipeableDrawer","onClose","onOpen","openMenu","Drawer","position","left","titleDisplaced","breakpoints","up","titleOrigin","appBar","backgroundColor","zIndex","appBarShift","Header","Fragment","AppBar","Toolbar","Fade","in","style","transitionDelay","edge","Menu","noWrap","flexGrow","switchTheme","WbIncandescent","AccountCircle","Navigation","React","useState","isMobile","menuOpen","setMenuOpen","handleOpenMenu","minHeight","maxWidth","children","container","values","content","down","frame","flexWrap","card","marginRight","marginBottom","media","detailed","margin","bigMedia","closeButton","right","top","WrappedPage","pageClasses","usePageStyles","Container","disableGutters","withPages","setTitle","useEffect","Paper","elevation","gutterBottom","paragraph","Button","href","TeamDetailed","Dialog","handleClose","Card","CardMedia","image","photo","name","Close","CardContent","NUSP","dense","primaryTypographyProps","email","Mail","setDetailed","TeamList","group","members","member","CardActionArea","handleOpen","profile","root","bottom","messageListContainer","overflow","message","wordBreak","contrastText","miniTime","float","fontSize","user","alignSelf","bot","date","inputContainer","flexDisplay","sendButton","addMessage","payload","useChat","socket","useRef","setConnected","current","io","on","console","log","emit","sender","Date","toISOString","reason","waitForConnection","callback","interval","maxCalls","connected","setTimeout","safeSend","msg","close","useSocket","dispatch","useDispatch","res","text","sendMessage","messageContent","ConnectedAlert","isConnected","connectionAlert","setConnectionAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","ChatInput","setMessageContent","autoComplete","onSubmit","e","preventDefault","test","TextField","autoFocus","fullWidth","label","placeholder","value","onChange","target","id","Send","day","getDate","getMonth","getFullYear","hour","toTimeString","match","useMessageList","sortedMessages","setSortedMessages","messages","useSelector","state","sort","a","b","length","date1","date2","datedIndex","datedMessages","lastDate","i","undefined","Error","formatTime","addDateMessages","MessageList","messageList","node","scrollTo","scrollHeight","window","ref","split","reduce","acc","line","questions","FAQ","_","ExpansionPanel","question","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","answer","actions","ExpansionPanelActions","act","size","tecnologias","techs","tech","Routes","exact","path","Chatbot","from","App","initialTitle","document","useTitle","createMuiTheme","setTheme","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","querySelector","setAttribute","useTheme","CssBaseline","Boolean","location","hostname","initialState","rootReducer","combineReducers","action","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6a53a2f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { \r\n  indigo, blue, blueGrey, amber\r\n } from '@material-ui/core/colors/';\r\n\r\n const lightTheme = {\r\n  palette: {\r\n    type: 'light',\r\n    primary: indigo,\r\n    secondary: {\r\n      main: amber['700'],\r\n    },\r\n    background: {\r\n      default: \"#fafafa\",\r\n      paper: \"#ffffff\",\r\n      header: indigo[500],\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: blue['A200'],\r\n      dark: indigo['A500'],\r\n      light: blueGrey[700],\r\n    },\r\n    secondary: {\r\n      main: amber['700'],\r\n    },\r\n    background: {\r\n      default: \"#121212\",\r\n      paper: \"#1e1e1e\",\r\n      header: \"#1f1f1f\",\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange', \r\n  },\r\n};\r\n\r\nexport default function useTheme() {\r\n  const [theme, setTheme] = React.useState(createMuiTheme(lightTheme));\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    document.querySelector(\"meta[name=theme-color]\")\r\n      .setAttribute(\"content\", theme.palette.background.header);\r\n  }, [theme]);\r\n\r\n  const switchPalette = () => {\r\n    setTheme(createMuiTheme(theme.palette.type === 'light' ? darkTheme : lightTheme));\r\n  };\r\n\r\n  const isMobile = width < theme.breakpoints.values['sm'];\r\n\r\n  return [theme, isMobile, switchPalette]\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  // Header\r\n  toolbar: {\r\n    width: props => props.drawerSize.width,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  menuButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  // Footer\r\n  footer: {\r\n    marginTop: \"auto\",\r\n    width: props => props.drawerSize.width,\r\n    textAlign: \"center\",\r\n  },\r\n  // Itens\r\n  selected: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  // Drawer\r\n  drawer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    overflowX: \"hidden\",\r\n    width: props => props.drawerSize.width,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: props => props.drawerSize.closedWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n}), {index: 1});\r\n","import React from 'react';\r\n\r\nimport {\r\n  Home as HomeIcon, HomeOutlined as HomeIconOutlined,\r\n  Info as InfoIcon, InfoOutlined as InfoIconOutlined,\r\n  Help as HelpIcon, HelpOutlineOutlined as HelpIconOutlined,\r\n  People as PeoplIcon, PeopleOutlined as PeoplIconOutlined,\r\n  Code as CodeIcon, SettingsEthernet as SettingsEthernetIcon,\r\n  QuestionAnswer as QuestionAnswerIcon, QuestionAnswerOutlined as QuestionAnswerIconOutlined,\r\n} from '@material-ui/icons';\r\n\r\nexport default [\r\n  {\r\n    title: 'Início',\r\n    to: '/home',\r\n    iconSelected: <HomeIcon />,\r\n    icon: <HomeIconOutlined />,\r\n  },\r\n  {\r\n    title: 'Chatbot',\r\n    to: '/chatbot',\r\n    iconSelected: <QuestionAnswerIcon />,\r\n    icon: <QuestionAnswerIconOutlined />,\r\n    divider: true,\r\n  },\r\n  {\r\n    title: 'Dúvidas comuns',\r\n    to: '/questions',\r\n    iconSelected: <HelpIcon />,\r\n    icon: <HelpIconOutlined />,\r\n  },\r\n  {\r\n    title: 'Equipe',\r\n    to: '/team',\r\n    iconSelected: <PeoplIcon />,\r\n    icon: <PeoplIconOutlined />,\r\n  },\r\n  {\r\n    title: 'Tecnologias',\r\n    to: '/tech',\r\n    iconSelected: <SettingsEthernetIcon />,\r\n    icon: <CodeIcon />,\r\n  },\r\n  {\r\n    title: 'Informações',\r\n    to: '/info',\r\n    iconSelected: <InfoIcon />,\r\n    icon: <InfoIconOutlined />,\r\n  }\r\n]\r\n","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport menuItens from './Sidebar.itens';\r\n\r\nimport {\r\n  Drawer, SwipeableDrawer, Box, Typography, IconButton, \r\n  List, ListItem, ListItemIcon, ListItemText, Divider, Tooltip\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  ChevronLeft as ChevronLeftIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles({ drawerSize: props.drawerSize });\r\n  const pathname = useLocation().pathname;\r\n\r\n  const drawerContent = (\r\n    <Box className={classes.drawer}>\r\n      <Box className={classes.toolbar}>\r\n        <Typography variant=\"h4\" component=\"h1\" color=\"primary\">\r\n          Chatbot\r\n        </Typography>\r\n\r\n        <Tooltip title=\"Esconder menu\" aria-label=\"Esconder menu\" enterDelay={500}>\r\n          <IconButton onClick={props.closeMenu} className={classes.menuButton}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <nav>\r\n        <List>\r\n          {menuItens.map((item) => (\r\n            <ListItem button \r\n              key={item.title} \r\n              component={Link} \r\n              divider={item.divider}\r\n              selected={item.to === pathname} \r\n              classes={{ selected: classes.selected }}\r\n              onClick={props.mobile ? props.closeMenu : null} \r\n              to={item.to}\r\n            >\r\n              <ListItemIcon className={item.to === pathname ? classes.selected : null}>\r\n                {item.to === pathname ? item.iconSelected : item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.title} role=\"link\" />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </nav>\r\n\r\n      <Box \r\n        className={classes.footer}\r\n        display={(props.open || props.mobile) ? \"block\":\"none\"}\r\n        role=\"contentinfo\"\r\n      >\r\n        <Divider />\r\n        <Typography variant=\"caption\" align=\"center\">\r\n          Projeto de formatura\r\n        </Typography>\r\n        <br />\r\n        <Typography variant=\"overline\">\r\n          PCS - USP\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return props.mobile ? (\r\n      <SwipeableDrawer\r\n        classes={{ paper: classes.drawerOpen }}\r\n        open={props.open}\r\n        onClose={props.closeMenu}\r\n        onOpen={props.openMenu}\r\n      >\r\n        {drawerContent}\r\n      </SwipeableDrawer>\r\n    ) : (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={props.open ? classes.drawerOpen : classes.drawerClose}\r\n        classes={{ paper: props.open ? classes.drawerOpen : classes.drawerClose }}\r\n      >\r\n        {drawerContent}\r\n      </Drawer>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  // Menu Button\r\n  menuButton: {\r\n    position: \"fixed\",\r\n    left: theme.spacing(2),\r\n  },\r\n  // Title\r\n  titleDisplaced: {\r\n    marginLeft: theme.spacing(4),\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(0),\r\n      transition: theme.transitions.create(['margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n  },\r\n  titleOrigin: {\r\n    marginLeft: theme.spacing(4),\r\n    [theme.breakpoints.up('sm')]: {\r\n      transition: theme.transitions.create(['margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    }\r\n  },\r\n  // Drawer\r\n  appBar: {\r\n    backgroundColor: theme.palette.background.header,\r\n    [theme.breakpoints.up('sm')]: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    }\r\n  },\r\n  appBarShift: {\r\n    backgroundColor: theme.palette.background.header,\r\n    zIndex: theme.zIndex.drawer - 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: props => props.drawerSize.width,\r\n      width: props => `calc(100% - ${props.drawerSize.width}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    }\r\n  },\r\n}), {index: 1});\r\n","import React from 'react';\r\n\r\nimport useStyles from './Header.style';\r\n\r\nimport {\r\n  Box, AppBar, Toolbar, IconButton, Typography, Fade, Tooltip\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  WbIncandescent as WbIncandescentIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles({ drawerSize: props.drawerSize });\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={props.open ? classes.appBarShift : classes.appBar}\r\n      >\r\n        <Toolbar>\r\n          <Fade in={!props.open} style={{ transitionDelay: '150ms' }}>\r\n            <Tooltip title=\"Exibir menu\" aria-label=\"Exibir menu\" enterDelay={500}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={props.openMenu}\r\n                className={classes.menuButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Fade>\r\n\r\n          <Typography \r\n            noWrap\r\n            variant=\"h6\"\r\n            component=\"h1\"\r\n            className={props.open ? classes.titleDisplaced : classes.titleOrigin}\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n\r\n          <Box flexGrow={1} />\r\n\r\n          <Box display=\"flex\">\r\n            <Tooltip title=\"Trocar tema\" aria-label=\"Trocar tema\" enterDelay={500}>\r\n              <IconButton color=\"inherit\" onClick={props.switchTheme}>\r\n                <WbIncandescentIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Ver perfil\" aria-label=\"Ver perfil\" enterDelay={500}>\r\n              <IconButton  color=\"inherit\" onClick={() => { }}>\r\n                <AccountCircleIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function Navigation(props) {\r\n  const drawerSize = {\r\n    width: 240,\r\n    closedWidth: 60,\r\n  }\r\n\r\n  const [menuOpen, setMenuOpen] = React.useState(!props.isMobile);\r\n  const handleOpenMenu = () => setMenuOpen(true);\r\n  const handleCloseMenu = () => setMenuOpen(false);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      minHeight=\"100vh\"\r\n      maxWidth=\"100vw\"\r\n    >\r\n      <Sidebar\r\n        open={menuOpen}\r\n        closeMenu={handleCloseMenu}\r\n        openMenu={handleOpenMenu}\r\n        mobile={props.isMobile}\r\n        drawerSize={drawerSize}\r\n        role=\"navigation\"\r\n      />\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexGrow={1}\r\n        flexDirection=\"column\"\r\n      >\r\n        <Header \r\n          open={menuOpen} \r\n          openMenu={handleOpenMenu} \r\n          title={props.title} \r\n          drawerSize={drawerSize}\r\n          switchTheme={props.switchTheme}\r\n        />\r\n\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  // Page container\r\n  container: {\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: theme.breakpoints.values['lg'],\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(2, 1),\r\n    },\r\n  },\r\n\r\n  // Default pages\r\n  content: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n\r\n  // Cards\r\n  frame: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  card: {\r\n    width: 220,\r\n    marginRight: theme.spacing(4),\r\n    marginBottom: theme.spacing(3),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginRight: theme.spacing(2),\r\n      width: 140,\r\n    },\r\n  },\r\n  media: {\r\n    height: 220,\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 140,\r\n    },\r\n  },\r\n\r\n  // Detailed\r\n  detailed: {\r\n    margin: 'auto',\r\n    width: 440,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 280,\r\n    },\r\n  },\r\n  bigMedia: {\r\n    height: 440,\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 280,\r\n    },\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n}), {index: 1});\r\n","import React from 'react';\r\nimport usePageStyles from './Pages.style';\r\n\r\nimport {\r\n  Container, \r\n} from '@material-ui/core';\r\n\r\n\r\nexport default (WrappedPage) => (props) => {\r\n    const pageClasses = usePageStyles();\r\n\r\n    return (\r\n      <Container disableGutters className={pageClasses.container} role=\"main\">\r\n        <WrappedPage {...props} />\r\n      </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport usePageStyles from './Pages.style';\r\nimport withPages from './withPages';\r\n\r\nimport {\r\n  Paper, Typography\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction Home({ setTitle }) {\r\n  const pageClasses = usePageStyles();\r\n  React.useEffect(() => { setTitle(\"Início\") }, [setTitle])\r\n\r\n  return (\r\n    <Paper elevation={2} className={pageClasses.content}>\r\n\r\n      <Typography variant=\"h2\" color=\"primary\" gutterBottom>\r\n        Chatbot\r\n      </Typography>\r\n\r\n      <Typography paragraph variant=\"h5\">\r\n        Olá,\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        Este site é a demonstração do Projeto de Formatura entitulado \r\n        <Typography variant=\"overline\">\r\n          <b> Chatbots para Antecipação de Demanda de Clientes\r\n          numa Distribuidora de Energia Elétrica </b>\r\n        </Typography>\r\n        do curso de Engenharia Elétrica com Ênfase em Computação da \r\n        Escola Politécnica da Universidade de São Paulo (POLI-USP)\r\n        e foi desenvolvido pelos alunos\r\n        Bruno Brandão Inácio e Pedro de Moraes Ligabue.\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        Por favor, utilize o menu na lateral esquerda para navegar pelo site. \r\n        Nele você encontrará a página 'Chatbot', onde será possível observar e\r\n        realizar testes com o chatbot em funcionamento.\r\n        Além disso, outras páginas apresentam todas as informações relevantes \r\n        sobre o projeto, como a descrição completa, tecnologias utilizadas, \r\n        equipe e informações de contato.\r\n      </Typography>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withPages(Home);\r\n","import React from 'react';\r\n\r\nimport usePageStyles from './Pages.style';\r\nimport withPages from './withPages';\r\n\r\nimport {\r\n  Paper, Typography, Button,\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction Info({ setTitle }) {\r\n  const pageClasses = usePageStyles();\r\n  React.useEffect(() => { setTitle(\"Informações\") }, [setTitle])\r\n\r\n  return (\r\n    <Paper elevation={2} className={pageClasses.content}>\r\n\r\n      <Typography variant=\"h2\" color=\"primary\" gutterBottom>\r\n        Chatbot\r\n      </Typography>\r\n\r\n      <Typography paragraph variant=\"h5\">\r\n        Olá,\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        Este site é a demonstração do Projeto de Formatura entitulado \r\n        <Typography variant=\"overline\">\r\n          <b> Chatbots para Antecipação de Demanda de Clientes\r\n          numa Distribuidora de Energia Elétrica </b>\r\n        </Typography>\r\n        do curso de Engenharia Elétrica com Ênfase em Computação da \r\n        Escola Politécnica da Universidade de São Paulo (POLI-USP)\r\n        e foi desenvolvido pelos alunos\r\n        Bruno Brandão Inácio e Pedro de Moraes Ligabue.\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        Neste projeto de formatura são estudados métodos de apoio à interação,\r\n        em forma de conversa de texto entre usuários e chatbots em um sistema \r\n        de atendimento ao cliente. A fim de atingir seu objetivo, é realizado \r\n        primeiramente o desenvolvimento de uma interface gráfica para plataforma \r\n        web, capaz de receber requisições de usuários e se comunicar com um\r\n        servidor, possibilitando uma interação simples e intuitiva por meio de \r\n        conversas de texto entre os usuários e os chatbots.\r\n        Em seguida, é feita a análise de diferentes algoritmos de Processamento \r\n        de Linguagem Natural (PLN) que possam ser aplicados aos chatbots de \r\n        forma que eles sejam capazes de identificar e responder questões\r\n        dos usuários de forma coerente, sendo suficientemente parecido com uma\r\n        interação humana para fornecer uma melhor experiência aos clientes.\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        Através do menu na lateral esquerda é possível navegar pelo site.\r\n        Você encontrará opções referentes à página 'Chatbot', onde poderá\r\n        observar e realizar testes com o chatbot desenvolvido. Além disso,\r\n        outras páginas apresentam todas as informações relevantes sobre o\r\n        projeto, como a as tecnologias utilizadas e dúvidas comuns. Por fim,\r\n        na página referente à equipe, é possível encontrar mais informações\r\n        e o contato dos autores do projeto.\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\">\r\n        O projeto foi dividido em duas partes: o front-end e o back-end e os\r\n        códigos desenvolvidos estão disponíveis de forma aberta em repositórios\r\n        do GitHub:\r\n      </Typography>\r\n\r\n      <Button color=\"primary\" href=\"https://github.com/BrunoInacio/chat-front-end\">\r\n          Front-end\r\n      </Button>\r\n      <Button color=\"primary\" href=\"https://github.com/Pligabue/rasa_chatbot\">\r\n          Back-end\r\n      </Button>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withPages(Info);\r\n","import React from 'react';\r\nimport usePageStyles from './Pages.style';\r\n\r\nimport {\r\n  Typography, Dialog,\r\n  ListItem, ListItemIcon, ListItemText, IconButton,\r\n  Card, CardMedia, CardContent,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Close as CloseIcon,\r\n  Code as CodeIcon, Mail as MailIcon,\r\n} from '@material-ui/icons';\r\n\r\nexport default function TeamDetailed(props) {\r\n  const pageClasses = usePageStyles();\r\n\r\n  return (\r\n    <Dialog onClose={props.handleClose} open={props.detailed.open}>\r\n      <Card className={pageClasses.detailed}>\r\n\r\n        <CardMedia\r\n          className={pageClasses.bigMedia}\r\n          image={props.detailed.photo}\r\n          title={props.detailed.name}\r\n        />\r\n\r\n        <IconButton className={pageClasses.closeButton} onClick={props.handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            {props.detailed.name}\r\n          </Typography>\r\n\r\n          {props.detailed.NUSP ? (\r\n            <ListItem dense disableGutters>\r\n              <ListItemIcon><CodeIcon color=\"secondary\" /></ListItemIcon>\r\n              <ListItemText primaryTypographyProps={{variant: 'overline'}} primary={props.detailed.NUSP} />\r\n            </ListItem>\r\n          ) : null}\r\n\r\n          {props.detailed.email ? (\r\n            <ListItem dense disableGutters>\r\n              <ListItemIcon><MailIcon color=\"secondary\" /></ListItemIcon>\r\n              <ListItemText primaryTypographyProps={{variant: 'body2'}} primary={props.detailed.email} />\r\n            </ListItem>\r\n          ) : null}\r\n        </CardContent>\r\n\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n}\r\n","const authors = [\r\n  {\r\n    'name': \"Bruno Brandão Inácio\",\r\n    'photo': \"https://avatars1.githubusercontent.com/u/3254614\",\r\n    'NUSP': 9838122,\r\n    'email': \"bruno.inacio@usp.br\",\r\n    'telephone': \"(DDD) NNNNN-NNNN\",\r\n  },\r\n  {\r\n    'name': \"Pedro de Moraes Ligabue\",\r\n    'photo': \"https://avatars3.githubusercontent.com/u/36277911\",\r\n    'NUSP': 9837434,\r\n    'email': \"pedro.ligabue@usp.br\",\r\n    'telephone': \"(DDD) NNNNN-NNNN\",\r\n  }\r\n]\r\n\r\nconst professor = [\r\n  {\r\n    'name': \"Dra. Anarosa Alves Franco Brandão\",\r\n    'photo': \"http://servicosweb.cnpq.br/wspessoa/servletrecuperafoto?tipo=1&id=K4728035E1\",\r\n    'NUSP': 319590\r\n  }\r\n]\r\n\r\nconst collaborator = [\r\n  {\r\n    'name': \"Pedro Koch\",\r\n    'photo': \"https://avatars0.githubusercontent.com/u/34276307\",\r\n    'NUSP': 9837420,\r\n  }\r\n]\r\n\r\nexport default [\r\n  {\r\n    'title': \"Autores\",\r\n    'members': authors\r\n  },\r\n  {\r\n    'title': \"Orientadora\",\r\n    'members': professor\r\n  },\r\n  {\r\n    'title': \"Colaborador\",\r\n    'members': collaborator,\r\n  }\r\n]\r\n","import React from 'react';\r\n\r\nimport usePageStyles from './Pages.style';\r\nimport withPages from './withPages';\r\n\r\nimport Detailed from './Team.detailed';\r\nimport TeamList from './Team.list';\r\n\r\nimport {\r\n  Box, Paper, Typography, \r\n  Card, CardMedia, CardContent, CardActionArea,\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction Team({ setTitle }) {\r\n  const pageClasses = usePageStyles();\r\n  React.useEffect(() => { setTitle(\"Equipe\") }, [setTitle])\r\n\r\n  const [detailed, setDetailed] = React.useState({ open: false });\r\n  const handleClose = () => setDetailed({ open: false });\r\n  const handleOpen = (member) => setDetailed({\r\n    open: true,\r\n    ...member,\r\n  });\r\n\r\n  return (\r\n    <Paper elevation={2} className={pageClasses.content}>\r\n      {TeamList.map(group => (\r\n        <Box key={group.title}>\r\n          <Typography variant=\"h4\" color=\"primary\" component=\"h2\">\r\n            {group.title}\r\n          </Typography>\r\n\r\n          <Box className={pageClasses.frame} marginTop={2} marginBottom={2}>\r\n            {group.members.map(member => (\r\n              <Card className={pageClasses.card} key={member.name}>\r\n                <CardActionArea onClick={() => handleOpen(member)} profile={member}>\r\n                  <CardMedia \r\n                    className={pageClasses.media} \r\n                    image={member.photo} \r\n                    title={member.name}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h3\">\r\n                      {member.name}\r\n                    </Typography>\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      {member.NUSP}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n\r\n      {detailed.open ? (\r\n        <Detailed detailed={detailed} handleClose={handleClose} />\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withPages(Team);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  // Container\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: \"100%\",\r\n    [theme.breakpoints.up('sm')]: {\r\n      position: 'absolute',\r\n      height: \"auto\",\r\n      top: theme.spacing(2),\r\n      bottom: theme.spacing(2),\r\n      left: theme.spacing(1),\r\n      right: theme.spacing(1),\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n  },\r\n\r\n  // Message List\r\n  messageListContainer: {\r\n    marginTop: 'auto',\r\n    padding: theme.spacing(1),\r\n    overflow: 'auto',\r\n\r\n    '&::-webkit-scrollbar': {\r\n      width: '0.4em'\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'rgb(0, 0, 0, 0.1)',\r\n    }\r\n  },\r\n\r\n  // Messages\r\n  message: {\r\n    maxWidth: '90%',\r\n    textAlign: 'left',\r\n    wordBreak: 'break-word',\r\n    overflow: 'hidden',\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  miniTime: {\r\n    float: 'right',\r\n    margin: theme.spacing(2, 0, -1, 3),\r\n    fontSize: '0.6rem',\r\n    color: 'white',\r\n  },\r\n\r\n  // Message types\r\n  user: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  bot: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n  date: {\r\n    alignSelf: 'center',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n\r\n  // Input\r\n  inputContainer: {\r\n    width: '100%',\r\n    position: 'sticky',\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(0, 2, 1, 2),\r\n    },\r\n  },\r\n  flexDisplay: {\r\n    display: 'flex',\r\n  },\r\n  sendButton: {\r\n    height: 36,\r\n    alignSelf: 'flex-end',\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}), {index: 1});\r\n","export const ADD_MESSAGE = \"ADD_MESSAGE\"\r\n\r\nexport const addMessage = (payload) => ({ type: ADD_MESSAGE, payload })","import React  from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addMessage } from '../../redux/actions';\r\n\r\nimport useSocket from './useSocket';\r\n\r\nexport default function useChat() {\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    \r\n    socket.current.on(\"bot_uttered\", (res) => {\r\n      dispatch(addMessage({\r\n        message: res.text,\r\n        sender: \"bot\",\r\n        date: new Date().toISOString()\r\n      }))\r\n    })\r\n    \r\n    socket.current.sendMessage = (messageContent) => {\r\n      const msg = {\r\n        message: messageContent,\r\n        sender: \"user\",\r\n        date: new Date().toISOString()\r\n      };\r\n\r\n      dispatch(addMessage(msg));\r\n      socket.current.safeSend(msg);\r\n    }\r\n  }, [socket, dispatch])\r\n\r\n  return [socket.current.sendMessage, socket.current.connected];\r\n}\r\n","import React  from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function useSocket() {\r\n  const socket = React.useRef([]);\r\n  \r\n  const [isConnected, setConnected] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    socket.current = io();\r\n\r\n    socket.current.on('connect', () => {\r\n      setConnected(true);\r\n      console.log(\"CONNECTED\");\r\n      socket.current.emit('user_uttered', {\r\n        message: \"/get_started\",\r\n        sender: \"user\",\r\n        date: new Date().toISOString()\r\n      })\r\n    })\r\n\r\n    socket.current.on('disconnect', (reason) => {\r\n      setConnected(false);  \r\n      console.log(\"DISCONNECTED\");\r\n    })\r\n\r\n    socket.current.on('error', () => {\r\n      console.log(\"ERROR\");\r\n    })\r\n\r\n    socket.current.waitForConnection = (callback, interval, maxCalls = 30) => {\r\n      if (maxCalls <= 0)\r\n        return;\r\n\r\n      if (socket.current.connected) {\r\n        callback();\r\n      } else {\r\n        setTimeout(() => {\r\n          socket.current.waitForConnection(callback, interval, --maxCalls)\r\n        }, interval);\r\n      }\r\n    }\r\n\r\n    socket.current.safeSend = (msg) => {\r\n      socket.current.waitForConnection(() => {\r\n        socket.current.emit('user_uttered', msg)\r\n      }, 1000)\r\n    }\r\n\r\n    return () => socket.current.close()\r\n  }, []);\r\n\r\n  return socket;\r\n}\r\n","import React  from 'react';\r\n\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nexport default function ConnectedAlert({ isConnected }) {\r\n\r\n  const [connectionAlert, setConnectionAlert] = React.useState({ \r\n    open: false,\r\n  });\r\n\r\n  const handleClose = () => setConnectionAlert({\r\n    ...connectionAlert, \r\n    open: false,\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    if (isConnected === true) {\r\n      setConnectionAlert({\r\n        open: true,\r\n        type: \"success\",\r\n        message: \"Você está conectado.\",\r\n      })\r\n    } else if (isConnected === false) {\r\n      setConnectionAlert({\r\n        open: true,\r\n        type: \"error\",\r\n        message: \"Você não está conectado!\",\r\n      })\r\n    }\r\n  }, [isConnected])\r\n\r\n  return (\r\n      <Snackbar \r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={connectionAlert.open}\r\n        onClose={handleClose}\r\n        autoHideDuration={3000}\r\n      >\r\n        <MuiAlert \r\n          elevation={5} \r\n          variant=\"filled\"\r\n          severity={connectionAlert.type}\r\n        >\r\n          {connectionAlert.message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n  );\r\n}\r\n\r\n","import React  from 'react';\r\n\r\nimport useStyles from './Chatbot.style';\r\n\r\nimport { Button, TextField, Box, Divider } from '@material-ui/core';\r\nimport { Send as SendIcon } from '@material-ui/icons';\r\n\r\nexport default function ChatInput({ sendMessage }) {\r\n  const classes = useStyles();\r\n  const [messageContent, setMessageContent] = React.useState(\"\");\r\n  \r\n  const handleInput = (e) => {\r\n    setMessageContent(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (/^\\s*$/.test(messageContent))\r\n      return;\r\n\r\n    sendMessage(messageContent);\r\n    setMessageContent(\"\");\r\n  };\r\n  \r\n  return (\r\n    <Box className={classes.inputContainer}>\r\n      <Divider />\r\n\r\n      <form \r\n        autoComplete=\"off\"\r\n        className={classes.flexDisplay}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <TextField autoFocus fullWidth\r\n          label=\"Mensagem\"\r\n          placeholder=\"Digite sua mensagem aqui.\"\r\n          color=\"primary\"\r\n          margin=\"dense\"\r\n          value={messageContent}\r\n          onChange={handleInput}\r\n          id=\"new-message\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"text\"\r\n          color=\"primary\"\r\n          className={classes.sendButton}\r\n          aria-label=\"Enviar mensagem\"\r\n        >\r\n          <SendIcon />\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","export function day(date) {\r\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}` \r\n}\r\n\r\nexport function hour(date) {\r\n  return date.toTimeString().match(/[0-2][0-9]:[0-5][0-9]/) \r\n}","import React  from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { sameDay, formatTime } from '../../utils';\r\n\r\nexport default function useMessageList() {\r\n  const [sortedMessages, setSortedMessages] = React.useState([]);\r\n  const messages = useSelector(state => state.messages);\r\n\r\n  const addDateMessages = (sortedMessages) => {\r\n    if (sortedMessages.length < 1)\r\n      return []\r\n\r\n    let datedIndex = 0\r\n    let datedMessages = []\r\n    let lastDate = []\r\n  \r\n    for (let i = 0; i < sortedMessages.length; i++) {\r\n      const message = sortedMessages[i]\r\n\r\n      if (message.sender === undefined) {\r\n        throw new Error(\"Missing 'sender' parameter.\");\r\n      } else if (message.sender !== \"bot\" && message.sender !== \"user\" && message.sender !== \"date\") {\r\n        throw new Error(\"Sender can only be 'user', 'date' or 'bot'.\");\r\n      }\r\n\r\n      if (!sameDay(new Date(message.date), new Date(lastDate)) && message.sender !== \"date\") {\r\n        datedMessages[datedIndex++] = { \r\n          sender: \"date\",\r\n          message: formatTime.day(new Date(message.date)),\r\n          date: message.date \r\n        }\r\n      }\r\n  \r\n      datedMessages[datedIndex++] = message\r\n      lastDate = message.date\r\n    }\r\n    \r\n    return datedMessages\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let sortedMessages = [...messages]\r\n\r\n    sortedMessages.sort((a, b) => (\r\n        new Date(a.date) < new Date(b.date) ? -1 : 1\r\n    ))\r\n    \r\n    sortedMessages = addDateMessages(sortedMessages)\r\n    setSortedMessages(sortedMessages)\r\n  }, [messages]);\r\n\r\n  return sortedMessages;\r\n}\r\n\r\n","export default function sameDay(date1, date2) {\r\n  return (\r\n    date1.getFullYear() === date2.getFullYear() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getDate() === date2.getDate()\r\n  )\r\n}","import React from 'react';\r\n\r\nimport useStyles from './Chatbot.style';\r\n\r\nimport { Box, Typography, Paper } from '@material-ui/core';\r\n\r\nimport { formatTime } from '../../utils';\r\nimport useMessageList from '../Chat/useMessageList'\r\n\r\nexport default function MessageList() {\r\n  const classes = useStyles();\r\n  const messageList = React.useRef(null)\r\n  const sortedMessages = useMessageList();\r\n\r\n  React.useEffect(() => {\r\n    let node = messageList.current;\r\n    node.scrollTo(0, node.scrollHeight);\r\n    window.scrollTo(0, node.scrollHeight);\r\n  }, [sortedMessages]);\r\n\r\n  return (\r\n    <Box ref={messageList} className={classes.messageListContainer}>\r\n      <Box display=\"flex\" flexDirection=\"column\">\r\n\r\n        {sortedMessages.map((message, index) => (\r\n          <Paper \r\n            key={index} \r\n            className={classes.message + ' ' + classes[message.sender]}\r\n          >\r\n            <Typography\r\n              variant={message.sender !== \"date\" ? \"body1\" : \"subtitle2\"}\r\n              component=\"h2\"\r\n            >\r\n              {message.message.split(\"\\n\").reduce((acc, line) =>\r\n                <>{acc}<br />{line}</>\r\n              )}\r\n              {message.sender !== \"date\" ? (\r\n                <span className={classes.miniTime}>\r\n                  {formatTime.hour(new Date(message.date))}\r\n                </span>\r\n              ) : null}\r\n            </Typography>\r\n          </Paper>\r\n        ))}\r\n        \r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React  from 'react';\r\n\r\nimport withPages from './withPages';\r\nimport useStyles from './Chatbot.style';\r\n\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport useChat from '../Chat/useChat';\r\nimport ConnectedAlert from '../Chat/ConnectedAlert';\r\n\r\nimport MessageInput from \"./Chatbot.MessageInput\"\r\nimport MessageList from \"./Chatbot.MessageList\"\r\n\r\nfunction ChatBot({ setTitle }) {\r\n  const classes = useStyles();\r\n  React.useEffect(() => { setTitle(\"Conversa\") }, [setTitle])\r\n\r\n  const [sendMessage, isConnected] = useChat();\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.root}>\r\n      <ConnectedAlert isConnected={isConnected} />\r\n\r\n      <MessageList />\r\n      <MessageInput sendMessage={sendMessage} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withPages(ChatBot);\r\n","const questions = [\r\n  {\r\n    'question': \"Como posso testar o Chatbot?\",\r\n    'answer': \"Para testar o chatbot basta enviar uma pergunta ou alguma mensagem\\\r\n               de início de conversa e o programa automaticamente responderá\\\r\n               adequadamente.\",\r\n    'actions': [\r\n      {\r\n      'text': \"Ir para Chatbot\",\r\n      'to': '/chatbot'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    'question': \"O que é um Chatbot?\",\r\n    'answer': \"Chatbot é um software de computador que simula conversas \\\r\n               humanas, em forma de texto ou de voz, possibilitando comunicação \\\r\n               entre pessoas e computadores com base em linguagem natural, \\\r\n               fazendo com que o computador se comporte como um ser humano.\\\r\n               \\\r\n               Eles funcionam com base em técnicas de Inteligência Artificial \\\r\n               como Processamento de Linguagem Natural e Aprendizado de Máquina \\\r\n               e podem ser classificados em: (i) declarativos, que são baseados \\\r\n               em regras e focam na execução de apenas uma tarefa; \\\r\n               e (ii) conversacionais, que são mais sofisticados, utilizam mais \\\r\n               técnicas de aprendizado de máquina e podem funcionar como \\\r\n               assistentes virtuais que fornecme sugestões aos usuários e \\\r\n               podem ser capazes de prever demandas\",\r\n  },\r\n  {\r\n    'question': \"Quais as vantagens do uso de um Chatbot?\",\r\n    'answer': \"Uma implementação adequada de atendimento automatizado gera \\\r\n               benefícios para ambas as partes envolvidas. Para a empresa, \\\r\n               é possível atrair público mais jovem, reduzir custos com \\\r\n               centrais de atendimento e realocar funcionários e investimentos \\\r\n               em outras áreas a fim de melhorar a experiência dos usuários e \\\r\n               de gerar maiores retornos. Enquanto para o cliente, é possível \\\r\n               reduzir o tempo gasto com ferramentas de busca e simplificar o \\\r\n               acesso a informações e recomendações.\",\r\n  },\r\n  {\r\n    'question': \"O que é Processamento de Linguagem Natural (PLN)?\",\r\n    'answer': \"O Processamento de Linguagem Natural (PLN) é uma área que da \\\r\n               Inteligência Artificial que interage com a Ciência da Computação \\\r\n               e com a área de linguística visando estudar problemas \\\r\n               relacionados à produção e interpretação de conteúdo em \\\r\n               linguagens humanas (naturais). \\\r\n               \\\r\n               Segundo Russell e Norvig, as linguagens naturais se diferenciam \\\r\n               das linguagens formais por, por exemplo, não conterem um \\\r\n               conjunto definido de cadeias, formadas a partir de uma gramática \\\r\n               com regras definidas, incluírem ambiguidade e mudarem \\\r\n               constantemente. Por estes motivos, a modelagem de linguagens \\\r\n               naturais é mais consistente se feita com o uso de modelos \\\r\n               estatísticos no lugar de regras de produção, como uma gramática \\\r\n               formal.\",\r\n  },\r\n  {\r\n    'question': \"Como posso entrar em contato com os autores do projeto?\",\r\n    'answer': \"Na página referente à Equipe, é possível clicar em cima da foto \\\r\n               de um dos autores para expandir informações mais detalhadas \\\r\n               sobre o autor, incluindo informações de contato.\",\r\n    'actions': [\r\n      {\r\n      'text': \"Ver Equipe\",\r\n      'to': '/team'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default questions;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport withPages from './withPages';\r\n\r\nimport FAQ from './Questions.list';\r\n\r\nimport {\r\n  Typography, Button,\r\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions\r\n} from '@material-ui/core';\r\n\r\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons';\r\n\r\nfunction Questions({ setTitle }) {\r\n  React.useEffect(() => { setTitle(\"Dúvidas comuns\") }, [setTitle])\r\n\r\n  return FAQ.map((item, _) => (\r\n    <ExpansionPanel key={item.question}>\r\n\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"subtitle2\">{item.question}</Typography>\r\n      </ExpansionPanelSummary>\r\n\r\n      <ExpansionPanelDetails>\r\n        <Typography color=\"textSecondary\">{item.answer}</Typography>\r\n      </ExpansionPanelDetails>\r\n\r\n      {item.actions ? (\r\n        <ExpansionPanelActions>\r\n          {item.actions.map((act, _) => (\r\n            <Button key={act.text} size=\"small\" color=\"primary\" component={Link} to={act.to}>\r\n              {act.text}\r\n            </Button>\r\n          ))}\r\n        </ExpansionPanelActions>\r\n        ) : null\r\n      }\r\n\r\n    </ExpansionPanel>\r\n  ))\r\n}\r\n\r\nexport default withPages(Questions);\r\n","const tecnologias = [\r\n  {\r\n    'name': \"JavaScript\",\r\n    'photo': \"https://upload.wikimedia.org/wikipedia/commons/9/99/Unofficial_JavaScript_logo_2.svg\",\r\n  },\r\n  {\r\n    'name': \"React\",\r\n    'photo': \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1920px-React-icon.svg.png\",\r\n  },\r\n  {\r\n    'name': \"Material UI\",\r\n    'photo': \"https://material-ui.com/static/logo.svg\",\r\n  },\r\n  {\r\n    'name': \"Socket.IO\",\r\n    'photo': \"https://upload.wikimedia.org/wikipedia/commons/9/96/Socket-io.svg\",\r\n  },\r\n  {\r\n    'name': \"Python\",\r\n    'photo': \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Python.svg/1024px-Python.svg.png\",\r\n  },\r\n  {\r\n    'name': \"Rasa NLU\",\r\n    'photo': \"https://d33wubrfki0l68.cloudfront.net/70e7a88adf729f18dd46e5010660d16a197b9edb/0004c/static/ef3444fc36faec97ae8bd7bfb568996d/rasa-logo-square.svg\",\r\n  }\r\n]\r\n\r\nexport default tecnologias;\r\n","import React from 'react';\r\n\r\nimport usePageStyles from './Pages.style';\r\nimport withPages from './withPages';\r\n\r\nimport techs from './Technology.list';\r\n\r\nimport {\r\n  Box, Typography,\r\n  Card, CardMedia, CardContent, CardActionArea,\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction Technology({ setTitle }) {\r\n  const pageClasses = usePageStyles();\r\n  React.useEffect(() => { setTitle(\"Tecnologias\") }, [setTitle])\r\n\r\n  return (\r\n    <Box className={pageClasses.frame} padding={2}>\r\n      {techs.map(tech => (\r\n        <Card className={pageClasses.card} key={tech.name}>\r\n          <CardActionArea>\r\n\r\n            <CardMedia \r\n              className={pageClasses.media}\r\n              image={tech.photo}\r\n              title={tech.name}\r\n            />\r\n\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">{tech.name}</Typography>\r\n            </CardContent>\r\n\r\n          </CardActionArea>\r\n        </Card>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withPages(Technology);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport usePageStyles from '../Pages.style';\r\nimport withPages from '../withPages';\r\n\r\nimport {\r\n  Paper, Typography, Button,\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction Error404({ setTitle }) {\r\n  const pageClasses = usePageStyles();\r\n  React.useEffect(() => { setTitle(\"Página não encontrada\") }, [setTitle])\r\n  \r\n  return (\r\n    <Paper elevation={2} className={pageClasses.content}>\r\n\r\n      <Typography variant=\"h2\" color=\"error\" gutterBottom>\r\n        Página não encontrada\r\n      </Typography>\r\n\r\n      <Typography paragraph align=\"justify\" variant=\"subtitle1\" color=\"error\">\r\n        Utilize o menu lateral para navegar apenas por páginas válidas.\r\n      </Typography>\r\n\r\n      <Button color=\"primary\" component={Link} to=\"/home\">\r\n        Voltar para o início\r\n      </Button>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withPages(Error404);\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { Home, Info, Team, Questions, Technology, Chatbot } from '../Pages';\r\nimport { Error404 } from '../Pages/Error';\r\n\r\nexport default function Routes(props) {\r\n  return (\r\n      <Switch>\r\n        <Route exact path=\"/home\"><Home {...props} /></Route>\r\n        <Route exact path=\"/questions\"><Questions {...props} /></Route>\r\n        <Route exact path=\"/tech\"><Technology {...props} /></Route>\r\n        <Route exact path=\"/info\"><Info {...props} /></Route>\r\n        <Route exact path=\"/team\"><Team {...props} /></Route>\r\n        <Route exact path=\"/chatbot\"><Chatbot {...props} /></Route>\r\n        \r\n        <Route exact path='/404'><Error404 {...props} /></Route>\r\n\r\n        <Redirect exact from=\"/\" to=\"/home\" />\r\n        <Redirect to=\"/404\" />\r\n      </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nimport useTheme from './App.useTheme'\r\nimport Navigation from '../Navigation';\r\nimport Routes from './App.routes'\r\n\r\nimport { useTitle } from '../../utils';\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useTitle(\"\");\r\n  const [theme, isMobile, switchTheme] = useTheme();\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <Navigation title={title} switchTheme={switchTheme} isMobile={isMobile}>\r\n        <Routes setTitle={setTitle} />\r\n      </Navigation>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport default function useTitle(initialTitle) {\r\n\r\n  const [title, setTitle] = useState(initialTitle);\r\n\r\n  useEffect(() => { \r\n    document.title = \"Chatbot\" + (title ? \" - \" + title : \"\"); \r\n  }, [title]);\r\n\r\n  return [title, setTitle]\r\n} ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ADD_MESSAGE } from \"../actions\";\r\n\r\nconst initialState = []\r\n\r\nexport const messages = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return [...state, action.payload]  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { messages } from \"./messages\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages\r\n})","import { createStore } from \"redux\";\r\n\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  \r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>  \r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}